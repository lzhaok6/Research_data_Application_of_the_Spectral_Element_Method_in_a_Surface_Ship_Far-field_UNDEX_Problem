%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (Figure 16\(b\).pdf)
%%Creator: (PDF Expert: cgpdftops CUPS filter)
%%CreationDate: (Thursday, July 11 2019 22:43:47 EDT)
%%For: (Zhaokuan Lu)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(Figure 16\(b\).pdf)def
/Creator(PDF Expert: cgpdftops CUPS filter)def
/CreationDate(Thursday, July 11 2019 22:43:47 EDT)def
/For(Zhaokuan Lu)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ColorModel RGB
<</cupsColorSpace 19/cupsBitsPerColor 8/cupsColorOrder 0/cupsCompression 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType any
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<</PageSize[612.0000 792.0000]/ImagingBBox null/Orientation 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *cupsPrintQuality Normal
<</cupsInteger1 4 /HWResolution[300 300]>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
612.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YSFPJG+Helvetica
%!FontType1-1.0: YSFPJG+Helvetica 1.0000.0.0000
14 dict begin/FontName /YSFPJG+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /F put
dup 38 /r put
dup 39 /e put
dup 40 /q put
dup 41 /u put
dup 42 /n put
dup 43 /c put
dup 44 /y put
dup 45 /space put
dup 46 /parenleft put
dup 47 /H put
dup 48 /z put
dup 49 /parenright put
dup 50 /four put
dup 51 /five put
dup 52 /six put
dup 53 /P put
dup 54 /s put
dup 55 /d put
dup 56 /o put
dup 57 /v put
dup 58 /l put
dup 59 /i put
dup 60 /t put
dup 61 /m put
dup 62 /slash put
dup 63 /A put
dup 64 /a put
dup 65 /g put
dup 66 /C put
dup 67 /B put
dup 68 /h put
dup 69 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<




4017870501460815350F051C35070D1238036F18380B1E471D1076C418D4EDFDED003FED3FED313043794034001B0D2601251A2609250526160E18280014001228011B081828001006122801170C1528011302152801190A1C280011041C28002B2B2B2B012B2B2B2B2B2B2B2B2B81005D001716111007022120272611343712211236113402232202111417163303407C60577EFEE2FEFE7E693F7601358AA678AD9F932F48AE0598E5B1FECCFEDCBFFEEEE0BB013BF4AF0146FAE5F80152F4013BFED5FEDDDB85CB000000000100C4000002D5059200080023B10801B80133400C0404070C04079605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F60000000100400000041E059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967DB9472604B70342750128F6E37946B5896238641A030EFC29B90112706F4B35536B7D938C4B85BB76D0FEF6A3AC7A47654C3631576AAA000000010031FFD9041A059A003100C4401F490C532D6529632D7529752D069626014B082B0A182B140D03F93114350D20B8012340141135107F0D0D311B3524050735310D1896274411B8014A400F0A382E6F021F2920810327023347321076C418D4EDF4ED10F5EDEDF4ED003FED3FED12392FF4FDE610ED10ED111239011112393130437940362F301926000905261D2522260600032800040308300A28011C231F28001A251828010401072800092F0728001E211B280119261B2801002B2B2B2B012B2B2B103C2B2B2B2B818181005D015D0402353316171633323635342623220607351E013332373635342623220706072334373621321615140706071E01151400230116E5BC0C2846B78EACB5A11225131C26166541729865B4452605B2406E0115DBF0472C46717FFEF2F8270117C88B3F719878947601019F03022038906B7478427AA070C8C3B98452331D1FB180CDFEFE000000000200340000042F059C0002000D005C402209020A080D010202BE12060607020601050708030106070A02750B05EF030C070403B80117B501960D08AC0AB80158B3050F470E1076C418D4F5F43CFDE4003F3FF43CFD3C1139390111123911123939872E2B047D10C50F3130011109011121350133113315




01400A00012E25292600192728B8010DB3216242182B2B4EF43C4DFDE410F4EDF4FD4E456544E6003F173C3F3F3C4DEDED111217390111123912393130005D13331536373633321716173E01333217161511231134262322061511231134272623220615112384B240345971804E2C243CA265D84E2ABB6B4D6A99B71A297066A7B4042F984F243D3F244656539C548EFD3702E86B508EA6FD9102BB6D324B9ECFFDC80000020084000003ED04490019001A005E4031B706C706020406140627147606740705140C021418101D05070006180B0A1A071A1A000C29091A1C012E18291900191B1CB80106B3216242182B2B4EF43C4DFDE44E10F64DED12392F003F3F3C3F3FED1139390112393130005D015D1333153E01333217161511231134272623220706070E011511230184AB4CAA68E4502CB71D307E40294A382D1BB401A7042F985E529F57A2FD5102A3623C640D1642357169FDCF0449000003003BFFD90421044E000C0018001900904033980896109916A504A808A610A916B808C808D704E50EE9140C3A08061D18070C1D120B190719191502270F1A1B092715191A1BB80109B321725D182B2B4EF44DED4E10F64DED12392F003F3FED3FED31304379402C001704260B1309260000110226010717092600050D0226010A140C260001100C26000816062601030E0626012B2B2B2B012B2B2B2B2B81005D241235342726232206151416331200111002212200351000330702E085304CBAA59696A3D6011EFCFEF7DDFEFC0112E70674010FA6965E94FCB2ABE403DAFEECFEF4FEFDFEAE012BFC010E0140050002003CFE5503ED0447000E0020007A4033381848185818A801A705A81C0628081217030B1D20071306031D1A0B160E072E132E162915141A220E271D19212287217242182B2B4EF44DED4E10F63C4DFDE4E4003F3FED3F3FED11393931304379401C1B1F0C0D00020126021B0E26000C1F0E2600001C0326000D1E0B26012B2B012B2B2B818181005D1217163332373635342726232206150017161735331123110E0123220011101233F82745B2BC47272B49B875A7018F5B322EABB52D9F77ABFEF2FDC9017E5EA7B061978B5D9FCBD4023E43244695FA2602264855010C01120101014A0000000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000020042FFD703B6044B002E002F012E408F38099805961299149815982A062824252736214621472447275624572766246726790C790D790E76237424742574



00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/slash 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/five 10 def
/six 11 def
/A 12 def
/B 13 def
/C 14 def
/F 15 def
/H 16 def
/P 17 def
/a 18 def
/c 19 def
/d 20 def
/e 21 def
/g 22 def
/h 23 def
/i 24 def
/k 25 def
/l 26 def
/m 27 def
/n 28 def
/o 29 def
/q 30 def
/r 31 def
/s 32 def
/t 33 def
/u 34 def
/v 35 def
/y 36 def
/z 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9319293CFDFFDF66CFE9885998F65FE6E49EC9C7C15B8E78E1E7286DA00D06E3344AD8B7F546CE511C79A0015F2E7082A077AB05C43DC7498DAA95F0B3A21777B0F5D30E941B21C4AA1DD76861CDEB8C61CC9293A0922B4BADBB7E65D3EAE18AC745E19A9F49C1B0B63DC87750696FD5383FF10D00EDBD8AD2CD50803EC842BACDDC5CC696CBDC2234C289AB4842002CC1759604BDE34B0FB7E769FE990AEC3C84BD712459B64FA8968F8DCC7C3692D560EE2F734AA0658190B90BF79A85A74955522DE79562BB44274C8AE8A1A2079662A72FDD2226646876949C6383A282C1A7C5738E7ECC8FE157E62EA91752B1A58F96217B5C9E157A0AB274A876076ACD490B6AC79813DC498137A6DBDCCD6AC80DADF59BBC9468510D117CF64196D1A8EA95523D93B18C83A03BA291FD07752ABDF3A68F699D2D90D153A6B0224255EEC8FCCF63C4438AE78CFAA908D8A1E3C57ADA434504A7DE8A0B4FE6BF21961029E3D7F89BB0C49C84F22AE6D9BEB7F3C9F3C93E5D4A2A1208F1AF3DE7B450692C0D66710391FEAF532437F3FC4C900A4365A2BB5EC1CACE18B4714E3B600C095BEAE964D2DF34F79239E2D977109F24116712218FFF35102257DAA7DAF8039DDE9452762F25B6245F68CED39B0FC7E163563C324E94E3C534EEB3B1411C04AEA50988B547CEEDF326DBCB99B6690581E20852319E6C1BD32344F4CECBF50E7594BC8F1FB13D2F6AE81E81B816C27B58CE9F7A4F519543CAACB773A7CC975C6CA02E
1B97378F77649FDA75FB51A9EF01C82333456F565B0A4821E3689AFC02E3E5B3911B99E8719FF061879EEE42425FA349831ED6BC2D3DFC9801ACB8BAEE37BB5C25D2EC7266901E6DF06CE49F1B4E8BD4767493843B912047B27A25464626531046D36085CF0277A68FEF9FC2269D1FE6408A69349F7A7558CFF673C04190DAC5679D8D33903FE7B1A1B630B87EE969CA33ED146837D0B3F165C01B2F90B33D1D7FDAC64EFD5B4AB2DAD1AA9B2146C8011F45CBEF1A5F78AB336E3961126220E540B99CC1D15834BBFD15AE01456B043B7F4EBB4B0E601DCFC4F7C15100637DC0E69D800899398B1A33BD4AFDD1381DB90F2B77DAF937B61190F5C16AD96E43DB557396646F73A7F74B3C055CEA589B95C030DB52C9376AB023467E544E74B0D04661588000D112697D9EBB965163EF2B703B1A79BE794C7D3FFEA93E3E2E1C4A69228A6D163E4E538D5619EB29ACCC1BE01FEB5E4ABF747C237A3F445860002D58E296D9FDC9CDD727C2BEEEA26CDDF5C634B74475C0B42C3A7428F57B3A9F2348C92505AF4CF7C90E832637A0D4D3A13EAB122F2BC03331C72D71E9EB5AA217AA064FAC9F3433895D831E3385EC514088A91515B82242EC2E7BAFD96CA19B8095549459AC24492F65A1106CFA6A9E0E1ADE8B5390D58A8E6C1B14514B299C3F01BCDBE19F89BB67C23A8ED2AA0EFC5D7F2C61F6166FF7EA72678C6542DE6E87A4A0DC79844C9C6D85CB1E9F9DF6922C99F7E278229E6C666EBEF59523BB454CC68996CDBF827F66160AB3A4C175A54D2F1516C73DD04C5263BDB5169B5BC0A8AF00E7AF307930DFA1E2B89F1072782C63A106EF3F6B58EB79DA613946CC6B400AA19B512D2B58C8165D73E8DD6052BEAEE686F0E3EF6578CE027E15D227E76A59F65EF5093164B59E702524A747F0E51AE39C185EE5A5F5E0CE1DBF787620D1B1EDF5738F4106CFA96A46F77B7608179C4B77A29EBCC3F3AB9AA6C3AEB1E7A3ECE640F0979368D932B3405F318E53D94A7EC3AABF8A299E8D00DCACC138B5A1899C45094330879382A418B126C751AF409FD2E3533439CF30A342E1FBB2472104218C36A9F607E7656CAE131FC6BA9D5060E153C783B8053C14355E0A4D55F47CE464E7EDF90FF080202F025DD79657AC8B51649377636B64FEBE3D9155BF5B2DDDF5C31409AE3C212DCE45356F6E2957283623A2216A88DCC6E91F59AB73068844E41ACBD4C695E0693C442954AEF38CB4BAA368BE3BA185EB1851DF9EB0ABF80C3E9CEF7ADA40D6873EFC52632F7042F1B6B75381047ED63D368912349B293CA169C683043FAD15228848878BBFDC4E2D16A06B3E0A8A02C4B90D569F479024D9CAED92295666711A772DE6AB357B16A9AED18282A5E702E15A892BF97B876E5CF7ED19B14E1F36ABE491946B0D8F8DF6ED1103814AF40E4771F9DDE55B2C
1AB224F6A2A73FE80DC1666E7E61F0B21DAFC2F03F1A244432219F2C200015439AA3C5DF5CC0E9E72B948ED0B2DA25A3244105049C9B91EAA9F44F66EA9206DBE91B957AC9DE502B449643E313342BE33078DD2EA7A340344FFD51FC41E7B65EF39F25F2AE2084736ADF8E58631A52670CDCEF2BF8410286A3404B59991B3BD5BD37B0FBA04AC56F26258CF9C2121D75AB963A2CB8F771EE1FF36994C2BDA5EF37D763185E692CC601CB8FD6FC573F69A671471AA686E6EDF3FE7CEAE805EF0534DBC91D151F3D3B2F65676533CAD732E790A65BB4AEC0F16D3ED4BCDBDEC9EF3B338083FDD6296C232A2EA7CEFBE896175684E7E89B43E08FE6DC5991A25DA649BAC48CCA50383080CEB7AFE01D92DF911941803FFC3EA05E3CA67B2FFCB42C948581EF11D55D083F5959A8956FB36F789268A95D69911D89D94E69170460DB62A57B5C07768B4EEE4849BBBCE06CE593F826996C56A8D96D001D268DC50CA6B2F1C011186F344CE3A23CF7A76BBCA26FAB9F9E6281E31CF8FEC5BC62D04346CBE662D1E5F55EA1D3455870D586DFF49A2B9F66CFEA8D63EC77E4B0FEB56AD32D39F183153B0941B2E3F2723C86F8D1AD504B91037D0450BBAA9100F2EBF37D45BC6B9E3EA27A26B838AA8C6AA8206E2FD9D1E012A72CEE9AD328E088C34E453984F2A5B9A9C535CD02BB84AF63802C7E2A951CB03EA0CB7CFFFBB10ADAAF9AC2E84148287C17CC580E8B6A4FB8B7CF7D2B1C819B458FF0AC720208D6E5194B896546DE69193F04C8F165B210DF1B36107823585E43C97A80B29115AFCBBF34152D6D0DEA24FA6F23631EC6AE5B647EF6B81477DBAFCFAB14CD4D8740819ECE9D53E0C01CF25F395DCE1E8B1E85B327CE114201E051D7645BFF57C8263BD040E22899E2C7961ADF4BC9DEE69B853075658498AC2D2BBD2CB5B381D1A826CCA3A8A34281CF5E83D35B7815531EBF520F17609332D1B7772AAE22C3FAF05E95C29EA39F4D6C6F71D3125B1E0F5CC8590187D8562870D170699D9DCD332F555F8275ED2F7F890CD929155D93A5D085345D2BDD8C3F86B87AE1DA565219B2CE589EF6D8CFEA6F0857119E4F9B835909C1B9F248596200D94B4400D617CAB11113F6CC7972FAD179B06220CD1C6E0EED6DE12FDCABA723A928CF2D72D3A0F963A6B8604556B490B777EB27CBA4F1641D76AACB7D547056AB82A24502F790B5FEEA881AAF0AC8B1F654978F81E46D32ED6DC835FEF84CF3B604784ABFA4F4ABA735A94315A938B4B6CC0B8D9307E9933553BF0E5CB3987BAAAC5AAA76BA6CA7F3D2B5DB470BEB9601BCE83957264654FAA522A2745B6ECE92FB8751F31DF70E0003897FAA2B26019634CEB757A0FB2EC79E659690CAE1F44A7BBA90722E8C5A727DE5DC2E361DCB28E1C87CA8C74D0E8A9DFBE08E63019D1A64CD7D0ACFDDFAC0D230
473D2E710231BEAB4B26B39E7469178F759BCF57C6EA9735610FA7BE08AA4782A4065401C98863BB10EDDB0E8BE10FD96D18F216E8BDCD8B2C131528288B35F1E646E27F8A70A2CE9EF8658A69EEE206253D3BFD4B4F464195A5486B67113FBF252D581B5DDAD930425BBECE5D3D4899CA30548FCD55B551AF00BE862F6D2E00B5E6BB58CB6514586557182B4B9D1CD65BF602E8BA996A13134089F57A34A2ACC9AD06744BAE1DD0B0E4491C1AEE04269DA78C8C313838077D5CF805CD4DB65BFB89D1819E717B7681E57F6D9797659A78C042A97B5A8BD750BD429689B569F836B5403ADBBADDBBF511DD3398AC2154B7FC05B1E6857A1155407E8703CA4D2F055DE27947A4D29D11429C9617C3D211059121C1DF8A4FBF473BA28074A330637E8DB3499C271181175DCB87D572659508082DD3BDEECBB8A8DE740A6D87383EF2CF0695B96826FDFA5A91F89A306DAC55F279D35B58843F40FE6E8DCF0527ABF3588F03C0DCD81417CB70E712BD1D3114B0DD07689E89A6CD546FCEA2800E3DB265923C39EBE53BAF27B8E0172AB96B0D0057D842EC3351DCA7847821684FEA3FC21C2B1AA1363F947023C6A78EC808AC13D3EE3A4D418F1F82ED26BD503B80764FDB9B8EFF3FC8A3464D06BAF336CB87389474D510925FEAC047E4F6C2FC8A09C1B3D96DDE10B0B8915724BF226F69B3304ED5B643596D03EF38BF8340C102B46C59EE869BB9A029D7255D1DED4B974F24D52F11446EE986FBFF2D7E21C0DE5496B8BAC07A9DEE4A86EF69D12DBC3C086C8C87C4BC7188CD8CE1E89D10007EDBA20F2990B55C9E9F6B8E74B8D45C39B6976AF63D7773F032A23687C16A511A6C2A26256A3FA3C8E6FE36A0F7B3DC9303EC3DA9532832474D5E64DABC597323F43B9618CF07F989120F775F4F11786F116F39B0732882F58E1A340AC0E2B770CB1253BEC87910DDE358D4AF97062D8E1A943AA79BC8C777FE07D09033A433AAF1F4E89C229579FDBB1597D72592D6DCF079F0AFE371A9759D4757981B9A72167FA9C99A0E2925A0AB667E61B2E328895D9D39BF7F2DB23906557AEE25E1720A1FBAAF04382A7FF9C638782E8D855C3E0BB56E882C532BC8D80651DEEB87F73A148DFF0F16D1A51B7CCF08188132B90B225A706DCEAA6E8DC858E3148E6C5A7BC91BAAF2672BD27E13554EC5D5B0C4DBC12326D109B841167149A49D9F7A5EF6D4BE9B1FFBBE6903F8BBA3A9412E40C6286B80DCF0F7022C261F42F26807FCA3E5D6BBAC2EC6E7C4BDE538291A02BBFE1CE252E436970B0A9D33BD28BA27D97423B5C79C46AED50CDFA762C57CAD063C7E98AAD92EA7E18CAF71CC42353BE1A4E3B541580082CE0FCD3D39BDED928C3D1587206ED6702E6EFD62642270C65F8B052633C5E04AFD41C0516DF8BA8FBF7D8226705F4E40730873E39852D4653260

33B1644E322346EB43ECECE7EA0EB61CF0F8FE31940E87A0B4259686CF6EC36EBA942E9EF236D083378997827BDB28CA782B70B31463DA1DF5361072F9E824113ABEEFD7B6C901A39BF184AE82A902F060E76A85D3ABC2CAB301637200B2800BA325D070B904AE512350B1F620BF75FB86D3356F9FB77D0A107E7A395F76A2825DE497DFF1AE84DD961126E5CBD4C72D7EFE00C1F59563AA05376CE964720D78E63849501DD49AC8FEF7DFC603E81E8DB8F176C0147809AE454F3B6EB9C5838910119966103FA43C2E63629F96F3FE878F2F069325BFF7100FAC9F2014F9828BD6EA924B0B6DDBCA441920EE4BB4A6B09A52CA9D2E0F22047FE69779E2C8386A55E29B4DFB7DEF3085988C20AA6EDD4FF812A1FF9E50655DC76BFAFFE11842BB5F0FDB520CE2F707FCEFC1E501C42715311CF2E91B89519072E8C33994CFE320011105B0DF47E734D64C0383C9469C9644A829D2544685F6D92792773E65779E558F087D56BEACD35AB87BC8B79CC5B7D13E6A65C4E9EED845CC3DD1BF3C3547A7D3AF0C43919D9A17C417D224A9C4F0CE5BC98ACF25DAA3820A3602DEA28985330F9ED67E56EC441C179DB27033DE663DD8188FC5AA8655AD8CA51A6C57F619C0233619D65FCA10B40012B0A3EAEB2693E8F781A25ADFF8FC220D637E98E3B0DAC79595C07E14098FEBD4E0754C2F42BB128D2818F36D3DEF8405EE78957E7C3EB321E6057FA06FDB2816CF66C473B467BBADD79726
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YSFPJG+Helvetica cguidfix
/F1.1/YSFPJG+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
56.004459 603.49609 m
735.99548 603.49609 l
735.99548 9.6372681 l
56.004459 9.6372681 l
56.004459 603.49609 l
h
W
55 8.5039034 682 594.99219 rc
56.004459 603.49609 m
735.99561 603.49609 l
735.99561 9.6372576 l
56.004459 9.6372576 l
h
f
Q
q
55 8.5039034 682 594.99219 rc
56.004459 603.49609 m
735.99561 603.49609 l
735.99561 9.6372576 l
56.004459 9.6372576 l
h
f
180.35471 105.4716 m
635.2561 105.4716 l
635.2561 559.50659 l
180.35471 559.50659 l
h
f
0.5 w
2 J
1 j
0.149 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
39.5 158.5 m
184 158.5 l
S
39.5 14 m
184 14 l
S
39.5 158.5 m
39.5 157.05499 l
S
87.666656 158.5 m
87.666656 157.05499 l
S
135.8333 158.5 m
135.8333 157.05499 l
S
184 158.5 m
184 157.05499 l
S
39.5 14 m
39.5 15.445 l
S
87.666656 14 m
87.666656 15.445 l
S
135.8333 14 m
135.8333 15.445 l
S
184 14 m
184 15.445 l
S
3.1481071 0 0 -3.1421101 180.35471 92.903183 cm
/F1.1[ 10 0 0 -10 0 0]sf
-3 10 m
(!)s
3.1481071 0 0 -3.1421101 331.98849 92.903183 cm
-8.5 10 m
("!!)[ 5.560000 5.560000 0.000000 ] xS
3.1481071 0 0 -3.1421101 483.62231 92.903183 cm
-8.5 10 m
(#!!)[ 5.560000 5.560000 0.000000 ] xS
3.1481071 0 0 -3.1421101 635.2561 92.903183 cm
-8.5 10 m
($!!)[ 5.560000 5.560000 0.000000 ] xS
3.1481071 0 0 -3.1421101 407.8056 50.484692 cm
/F1.1[ 11 0 0 -11 0 0]sf
-37 11 m
(%&'\(\)'*+,-./01)[ 6.721000 3.663000 6.116000 6.116000 6.116000 6.116000 6.116000 5.500000 5.500000 3.058000 3.663000 7.942000 5.500000 0.000000 ] xS
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
39.5 158.5 m
39.5 14 l
S
184 158.5 m
184 14 l
S
39.5 158.5 m
40.945 158.5 l
S
39.5 134.4167 m
40.945 134.4167 l
S
39.5 110.3333 m
40.945 110.3333 l
S
39.5 86.25 m
40.945 86.25 l
S
39.5 62.166672 m
40.945 62.166672 l
S
39.5 38.083328 m
40.945 38.083328 l
S
39.5 14 m
40.945 14 l
S
184 158.5 m
182.55499 158.5 l
S
184 134.4167 m
182.55499 134.4167 l
S
184 110.3333 m
182.55499 110.3333 l
S
184 86.25 m
182.55499 86.25 l
S
184 62.166672 m
182.55499 62.166672 l
S
184 38.083328 m
182.55499 38.083328 l
S
184 14 m
182.55499 14 l
S
3.1481071 0 0 -3.1421101 167.7623 105.4716 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6 3.5 m
(!)s
3.1481071 0 0 -3.1421101 167.7623 181.1441 cm
-6 3.5 m
(")s
3.1481071 0 0 -3.1421101 167.7623 256.81659 cm
-6 3.5 m
(#)s
3.1481071 0 0 -3.1421101 167.7623 332.48911 cm
-6 3.5 m
($)s
3.1481071 0 0 -3.1421101 167.7623 408.16159 cm
-6 3.5 m
(2)s
3.1481071 0 0 -3.1421101 167.7623 483.83411 cm
-6 3.5 m
(3)s
3.1481071 0 0 -3.1421101 167.7623 559.50659 cm
-6 3.5 m
(4)s
0 3.1421101 3.1481071 0 139.42931 332.48929 cm
/F1.1[ 11 0 0 -11 0 0]sf
-53 -3 m
(56'\)78-9':8+;<,-.=>61)[ 7.337000 5.500000 6.116000 6.116000 6.116000 6.116000 3.058000 5.500000 6.116000 2.442000 6.116000 5.500000 2.442000 3.058000 5.500000 3.058000 3.663000 9.163000 3.058000 5.500000 0.000000 ] xS
0 J
/Cs2 SC
1 0 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
39.548168 156.6747 m
40.029831 148.9496 l
40.511501 141.1918 l
40.993172 134.58681 l
41.474831 128.70799 l
41.956501 122.5269 l
42.438171 111.1451 l
42.91983 97.653503 l
43.401501 86.463211 l
43.883171 79.023781 l
44.36483 74.754807 l
44.8465 70.752487 l
45.328171 65.009102 l
45.80983 61.50457 l
46.2915 60.521832 l
46.77317 62.234581 l
47.254829 67.213348 l
47.7365 70.116959 l
48.21817 71.896797 l
48.699829 71.721832 l
49.181499 74.243202 l
49.66317 74.343948 l
50.144829 74.308372 l
50.626499 74.91497 l
51.10817 76.601677 l
51.589828 78.069458 l
52.071499 78.400543 l
52.553169 79.438683 l
53.034828 81.437286 l
53.516499 82.963631 l
53.998169 85.154068 l
54.479832 87.998093 l
54.961498 86.497627 l
55.443161 85.006668 l
55.924831 84.194397 l
56.406502 84.089157 l
56.888161 84.632851 l
57.369831 85.472153 l
57.851501 85.506409 l
58.33316 86.242287 l
58.814831 87.732018 l
59.296501 88.787453 l
59.778172 88.427032 l
60.25983 87.509903 l
60.741501 87.142593 l
61.223171 87.291321 l
61.70483 87.770958 l
62.186501 88.514069 l
62.668171 89.213257 l
63.14983 89.324158 l
63.6315 89.091713 l
64.113167 89.236557 l
64.594833 89.78759 l
65.0765 90.743683 l
65.558167 91.579407 l
66.039833 92.432571 l
66.5215 93.267433 l
67.003166 93.657913 l
67.484833 94.333702 l
67.966499 94.889877 l
68.448174 94.514709 l
68.929832 94.164421 l
69.411499 93.83847 l
69.893173 93.537216 l
70.374832 93.260483 l
70.856499 93.007599 l
71.338173 92.778938 l
71.819832 92.574203 l
72.301498 92.392891 l
72.783157 92.235413 l
73.264832 92.101242 l
73.746498 91.990311 l
74.228157 91.902702 l
74.709831 91.566467 l
75.191498 91.24408 l
75.673157 90.935333 l
76.154831 90.639938 l
76.636497 90.357643 l
77.118156 90.087921 l
77.599831 89.831268 l
78.081497 89.58812 l
78.563164 89.358841 l
79.04483 89.14341 l
79.526497 88.942703 l
80.008163 88.75589 l
80.48983 88.583817 l
80.971497 88.426079 l
81.453163 88.282402 l
81.93483 88.153122 l
82.416496 88.0373 l
82.898163 87.935287 l
83.379829 87.84626 l
83.861504 87.770439 l
84.343163 87.706718 l
84.824829 87.655579 l
85.306503 87.616676 l
85.788162 87.589737 l
86.269829 87.575348 l
86.751503 87.572853 l
87.23317 87.582878 l
87.714844 87.605209 l
88.196503 87.63942 l
88.678169 87.685959 l
89.159843 87.743889 l
89.641502 87.813293 l
90.123169 87.892937 l
90.604843 87.98204 l
91.086502 88.077431 l
91.568169 88.166573 l
92.049843 88.24279 l
92.531502 88.318764 l
93.013168 88.394859 l
93.494827 88.46196 l
93.976501 88.505142 l
94.458168 88.498917 l
94.939827 88.389252 l
95.421501 88.274963 l
95.903168 88.158096 l
96.384827 88.039848 l
96.866501 87.921753 l
97.348167 87.805161 l
97.829826 87.691711 l
98.311501 87.58213 l
98.793167 87.476753 l
99.274834 87.376266 l
99.7565 87.280998 l
100.2382 87.190529 l
100.7198 87.105339 l
101.2015 87.025528 l
101.6832 86.95108 l
102.1648 86.881981 l
102.6465 86.818207 l
103.1282 86.142082 l
103.6098 85.331573 l
104.0915 84.559303 l
104.5732 83.824654 l
105.0548 83.128273 l
105.5365 82.469513 l
106.0182 81.849998 l
106.4998 81.270218 l
106.9815 80.730637 l
107.4632 80.231247 l
107.9448 79.772163 l
108.4265 79.352577 l
108.9082 78.971207 l
109.3898 78.624397 l
109.8715 78.30674 l
110.3532 78.006607 l
110.8348 77.711403 l
111.3165 77.423889 l
111.7982 77.153664 l
112.2798 76.904671 l
112.7615 76.676659 l
113.2432 76.46833 l
113.7248 76.27697 l
114.2065 76.103012 l
114.6882 75.133881 l
115.1698 74.05513 l
115.6515 73.053368 l
116.1332 72.125504 l
116.6148 71.26339 l
117.0965 70.460831 l
117.5782 69.717682 l
118.0598 69.040604 l
118.5415 68.434517 l
119.0232 67.901016 l
119.5048 67.438347 l
119.9865 67.040413 l
120.4682 66.701813 l
120.9498 65.604233 l
121.4315 63.797951 l
121.9132 62.096409 l
122.3948 60.505772 l
122.8765 59.029228 l
123.3582 57.663761 l
123.8398 56.398689 l
124.3215 55.209278 l
124.8032 54.06612 l
125.2848 52.954941 l
125.7665 51.800869 l
126.2482 50.497009 l
126.7298 49.165501 l
127.2115 47.816021 l
127.6932 46.401009 l
128.1748 44.955441 l
128.65649 43.518311 l
129.1382 42.122391 l
129.6198 40.80032 l
130.1015 39.571201 l
130.58321 38.441158 l
131.0648 37.41291 l
131.54649 36.48513 l
132.0282 35.655151 l
132.5098 34.919861 l
132.9915 34.279449 l
133.47321 33.73653 l
133.9548 33.291801 l
134.43649 32.944092 l
134.9182 32.687851 l
135.3998 32.5196 l
135.8815 32.3498 l
136.3632 31.428801 l
136.8448 30.598539 l
137.32651 29.85774 l
137.8082 29.21312 l
138.28979 28.674219 l
138.7715 28.24353 l
139.2532 27.91486 l
139.7348 27.681061 l
140.21651 27.536831 l
140.6982 27.47967 l
141.17979 27.508369 l
141.6615 27.61759 l
142.1432 27.79356 l
142.6248 28.029329 l
143.10651 28.32674 l
143.5882 28.690729 l
144.06979 29.114731 l
144.5515 29.59234 l
145.0332 29.82513 l
145.5148 29.67779 l
145.99651 29.641649 l
146.4782 29.71895 l
146.95979 29.929461 l
147.4415 30.286329 l
147.9232 30.79427 l
148.4048 31.443621 l
148.88651 32.220661 l
149.36819 33.094891 l
149.84979 34.030621 l
150.3315 35.00346 l
150.8132 35.999371 l
151.2948 36.964001 l
151.7765 37.878971 l
152.25819 38.826481 l
152.73981 39.847328 l
153.2215 40.953362 l
153.7032 42.149689 l
154.1848 43.432301 l
154.6665 44.797531 l
155.14819 46.238628 l
155.62981 47.746361 l
156.1115 49.311958 l
156.5932 50.93079 l
157.0748 52.597321 l
157.5565 54.305321 l
158.03819 56.0485 l
158.51981 57.81752 l
159.0015 59.59922 l
159.4832 61.38538 l
159.9648 63.172878 l
160.4465 64.960197 l
160.92821 66.747139 l
161.40981 68.529793 l
161.89149 70.302391 l
162.3732 72.058983 l
162.8548 73.794258 l
163.3365 75.503197 l
163.81821 77.180054 l
164.2998 78.821083 l
164.78149 80.42041 l
165.2632 81.974007 l
165.7448 83.47699 l
166.2265 84.925003 l
166.70821 86.314407 l
167.1898 87.640213 l
167.67149 88.898621 l
168.1532 90.035622 l
168.6348 90.24511 l
169.1165 90.465607 l
169.59821 90.696838 l
170.0798 90.938454 l
170.56149 91.190063 l
171.0432 91.45118 l
171.5248 91.721313 l
172.0065 92.000092 l
172.4882 92.090523 l
172.9698 92.179352 l
173.45151 92.269341 l
173.9332 92.35968 l
174.41479 92.451874 l
174.8965 92.543671 l
175.3782 92.637848 l
175.8598 92.73114 l
176.34151 92.826714 l
176.8232 92.92189 l
177.30479 93.018784 l
177.7865 93.11573 l
178.2682 93.21389 l
178.7498 93.312477 l
179.23151 92.893356 l
179.7132 92.194031 l
180.19479 91.468567 l
180.6765 90.721779 l
181.1582 89.960228 l
181.6398 89.188393 l
182.12151 88.413551 l
182.6032 87.639664 l
183.08479 86.874069 l
183.5665 86.120178 l
184.0145 85.436577 l
S
2 j
1 M
[
8
3
2
3
] 0 d
0 0 1 sc
39.548168 152.9341 m
40.029831 148.97659 l
40.511501 141.24139 l
40.993172 134.6512 l
41.474831 128.7664 l
41.956501 123.3339 l
42.438171 111.4989 l
42.91983 97.85424 l
43.401501 86.656723 l
43.883171 79.229088 l
44.36483 74.894096 l
44.8465 67.170822 l
45.328171 61.71788 l
45.80983 58.881981 l
46.2915 58.88483 l
46.77317 61.808781 l
47.254829 67.286453 l
47.7365 70.227158 l
48.21817 71.979683 l
48.699829 71.833763 l
49.181499 74.358177 l
49.66317 74.464767 l
50.144829 74.425842 l
50.626499 75.051758 l
51.10817 76.728889 l
51.589828 78.182457 l
52.071499 78.54567 l
52.553169 79.537369 l
53.034828 81.491783 l
53.516499 83.057793 l
53.998169 85.262573 l
54.479832 88.089928 l
54.961498 86.61541 l
55.443161 85.136597 l
55.924831 84.381027 l
56.406502 84.239418 l
56.888161 84.801971 l
57.369831 85.497261 l
57.851501 85.527443 l
58.33316 86.260094 l
58.814831 87.762993 l
59.296501 88.937271 l
59.778172 88.473061 l
60.25983 87.568626 l
60.741501 87.214668 l
61.223171 87.383423 l
61.70483 87.960892 l
62.186501 88.692383 l
62.668171 89.33847 l
63.14983 89.275871 l
63.6315 89.037987 l
64.113167 89.180717 l
64.594833 89.727051 l
65.0765 90.675102 l
65.558167 91.579193 l
66.039833 92.444847 l
66.5215 93.349426 l
67.003166 93.767281 l
67.484833 94.471939 l
67.966499 95.02771 l
68.448174 94.650253 l
68.929832 94.297592 l
69.411499 93.969978 l
69.893173 93.667267 l
70.374832 93.389351 l
70.856499 93.136528 l
71.338173 92.907913 l
71.819832 92.70417 l
72.301498 92.52459 l
72.783157 92.369186 l
73.264832 92.237732 l
73.746498 92.129761 l
74.228157 92.045082 l
74.709831 91.741257 l
75.191498 91.420212 l
75.673157 91.11631 l
76.154831 90.829483 l
76.636497 90.559563 l
77.118156 90.306328 l
77.599831 90.069382 l
78.081497 89.847992 l
78.563164 89.642036 l
79.04483 89.449928 l
79.526497 89.270058 l
80.008163 89.099548 l
80.48983 88.93634 l
80.971497 88.780807 l
81.453163 88.634598 l
81.93483 88.499062 l
82.416496 88.375481 l
82.898163 88.264488 l
83.379829 88.166733 l
83.861504 88.082314 l
84.343163 88.011803 l
84.824829 87.955276 l
85.306503 87.912827 l
85.788162 87.884468 l
86.269829 87.870216 l
86.751503 87.870087 l
87.23317 87.883987 l
87.714844 87.911819 l
88.196503 87.9534 l
88.678169 88.008507 l
89.159843 88.076851 l
89.641502 88.158096 l
90.123169 88.251823 l
90.604843 88.35759 l
91.086502 88.474327 l
91.568169 88.590347 l
92.049843 88.664047 l
92.531502 88.741631 l
93.013168 88.822861 l
93.494827 88.891983 l
93.976501 88.922653 l
94.458168 88.876579 l
94.939827 88.762619 l
95.421501 88.651558 l
95.903168 88.542976 l
96.384827 88.435272 l
96.866501 88.326424 l
97.348167 88.216469 l
97.829826 88.107651 l
98.311501 88.002258 l
98.793167 87.900688 l
99.274834 87.804314 l
99.7565 87.713142 l
100.2382 87.627068 l
100.7198 87.546577 l
101.2015 87.471687 l
101.6832 87.402428 l
102.1648 87.33873 l
102.6465 86.954689 l
103.1282 86.119926 l
103.6098 85.321289 l
104.0915 84.560944 l
104.5732 83.838966 l
105.0548 83.156998 l
105.5365 82.515831 l
106.0182 81.915962 l
106.4998 81.357788 l
106.9815 80.84153 l
107.4632 80.367218 l
107.9448 79.934578 l
108.4265 79.542976 l
108.9082 79.191383 l
109.3898 78.878067 l
109.8715 78.599281 l
110.3532 78.349899 l
110.8348 78.120171 l
111.3165 77.896133 l
111.7982 77.673012 l
112.2798 77.452652 l
112.7615 77.233871 l
113.2432 77.01886 l
113.7248 76.816971 l
114.2065 76.611168 l
114.6882 75.44548 l
115.1698 74.358917 l
115.6515 73.35154 l
116.1332 72.42099 l
116.6148 71.563477 l
117.0965 70.774483 l
117.5782 70.046768 l
118.0598 69.375763 l
118.5415 68.760323 l
119.0232 68.203644 l
119.5048 67.711739 l
119.9865 67.290329 l
120.4682 66.942429 l
120.9498 65.790527 l
121.4315 63.975769 l
121.9132 62.265591 l
122.3948 60.67049 l
122.8765 59.19709 l
123.3582 57.84758 l
123.8398 56.616909 l
124.3215 55.484051 l
124.8032 54.379921 l
125.2848 53.27478 l
125.7665 52.20483 l
126.2482 51.021351 l
126.7298 49.687649 l
127.2115 48.343498 l
127.6932 46.9827 l
128.1748 45.60965 l
128.65649 44.210129 l
129.1382 42.827969 l
129.6198 41.520748 l
130.1015 40.308891 l
130.58321 39.202942 l
131.0648 38.204288 l
131.54649 37.313061 l
132.0282 36.524899 l
132.5098 35.83007 l
132.9915 35.22287 l
133.47321 34.699982 l
133.9548 34.26223 l
134.43649 33.915852 l
134.9182 33.660301 l
135.3998 33.49395 l
135.8815 33.085789 l
136.3632 32.181141 l
136.8448 31.39011 l
137.32651 30.71505 l
137.8082 30.13833 l
138.28979 29.642191 l
138.7715 29.225889 l
139.2532 28.904699 l
139.7348 28.688181 l
140.21651 28.58177 l
140.6982 28.58143 l
141.17979 28.68062 l
141.6615 28.86532 l
142.1432 29.116421 l
142.6248 29.422119 l
143.10651 29.784599 l
143.5882 30.207251 l
144.06979 30.66848 l
144.5515 31.13759 l
145.0332 31.152201 l
145.5148 30.964849 l
145.99651 30.892441 l
146.4782 30.94976 l
146.95979 31.14422 l
147.4415 31.47963 l
147.9232 31.95533 l
148.4048 32.566921 l
148.88651 33.311798 l
149.36819 34.18111 l
149.84979 35.15831 l
150.3315 36.208561 l
150.8132 37.25544 l
151.2948 38.197491 l
151.7765 39.08337 l
152.25819 40.007832 l
152.73981 41.01128 l
153.2215 42.112221 l
153.7032 43.312599 l
154.1848 44.610512 l
154.6665 45.999249 l
155.14819 47.467449 l
155.62981 49.000462 l
156.1115 50.57851 l
156.5932 52.18993 l
157.0748 53.836868 l
157.5565 55.525879 l
158.03819 57.256039 l
158.51981 59.025002 l
159.0015 60.823151 l
159.4832 62.640362 l
159.9648 64.461052 l
160.4465 66.263817 l
160.92821 68.035271 l
161.40981 69.782333 l
161.89149 71.509613 l
162.3732 73.217697 l
162.8548 74.902267 l
163.3365 76.56073 l
163.81821 78.186432 l
164.2998 79.775581 l
164.78149 81.322807 l
165.2632 82.822906 l
165.7448 84.270958 l
166.2265 85.662392 l
166.70821 86.992523 l
167.1898 88.25737 l
167.67149 89.452148 l
168.1532 90.572594 l
168.6348 90.940727 l
169.1165 91.165489 l
169.59821 91.402023 l
170.0798 91.648628 l
170.56149 91.735603 l
171.0432 91.820122 l
171.5248 91.906471 l
172.0065 91.993973 l
172.4882 92.081909 l
172.9698 92.172211 l
173.45151 92.261703 l
173.9332 92.353622 l
174.41479 92.445572 l
174.8965 92.538963 l
175.3782 92.63324 l
175.8598 92.728043 l
176.34151 92.824417 l
176.8232 92.920593 l
177.30479 93.018837 l
177.7865 93.11631 l
178.2682 93.216087 l
178.7498 93.106354 l
179.23151 92.44101 l
179.7132 91.746696 l
180.19479 91.029671 l
180.6765 90.294724 l
181.1582 89.548813 l
181.6398 88.796928 l
182.12151 88.045547 l
182.6032 87.300903 l
183.08479 86.566933 l
183.5665 85.851334 l
184.0145 85.205399 l
S
[
10
6
] 0 d
0 1 0 sc
39.548168 153.4894 m
40.029831 148.0757 l
40.511501 139.5943 l
40.993172 132.57899 l
41.474831 126.5249 l
41.956501 117.6849 l
42.438171 102.688 l
42.91983 88.219643 l
43.401501 77.41304 l
43.883171 70.909683 l
44.36483 63.6408 l
44.8465 56.546612 l
45.328171 52.49041 l
45.80983 51.801029 l
46.2915 54.62426 l
46.77317 60.908031 l
47.254829 65.844711 l
47.7365 66.439323 l
48.21817 68.782967 l
48.699829 68.572563 l
49.181499 70.919342 l
49.66317 71.522148 l
50.144829 71.547287 l
50.626499 72.057068 l
51.10817 73.826767 l
51.589828 75.244759 l
52.071499 75.811821 l
52.553169 76.658043 l
53.034828 78.526413 l
53.516499 80.255157 l
53.998169 82.3983 l
54.479832 85.348488 l
54.961498 84.499924 l
55.443161 82.853317 l
55.924831 82.064079 l
56.406502 81.865463 l
56.888161 82.339256 l
57.369831 82.723862 l
57.851501 82.720558 l
58.33316 83.348953 l
58.814831 84.792671 l
59.296501 86.411247 l
59.778172 86.098534 l
60.25983 85.063431 l
60.741501 84.615448 l
61.223171 84.704842 l
61.70483 85.315353 l
62.186501 86.16523 l
62.668171 86.833801 l
63.14983 86.690727 l
63.6315 86.287148 l
64.113167 86.324707 l
64.594833 86.784782 l
65.0765 87.655724 l
65.558167 88.73111 l
66.039833 89.520172 l
66.5215 90.443123 l
67.003166 90.897827 l
67.484833 91.601601 l
67.966499 92.387047 l
68.448174 92.237297 l
68.929832 92.030212 l
69.411499 91.683449 l
69.893173 91.360352 l
70.374832 91.062103 l
70.856499 90.789543 l
71.338173 90.54248 l
71.819832 90.321411 l
72.301498 90.126404 l
72.783157 89.95742 l
73.264832 89.814377 l
73.746498 89.697113 l
74.228157 89.605423 l
74.709831 89.539062 l
75.191498 89.497711 l
75.673157 89.481041 l
76.154831 89.488159 l
76.636497 89.239113 l
77.118156 89.002151 l
77.599831 88.780388 l
78.081497 88.57309 l
78.563164 88.379333 l
79.04483 88.197708 l
79.526497 88.027206 l
80.008163 87.867393 l
80.48983 87.719337 l
80.971497 87.5839 l
81.453163 87.462112 l
81.93483 87.354919 l
82.416496 87.262222 l
82.898163 87.184319 l
83.379829 87.121483 l
83.861504 87.073677 l
84.343163 87.040802 l
84.824829 87.022697 l
85.306503 87.018692 l
85.788162 87.028687 l
86.269829 87.052452 l
86.751503 87.088173 l
87.23317 87.134537 l
87.714844 87.188309 l
88.196503 87.246651 l
88.678169 87.311417 l
89.159843 87.384087 l
89.641502 87.465553 l
90.123169 87.554848 l
90.604843 87.650269 l
91.086502 87.748558 l
91.568169 87.850243 l
92.049843 87.958549 l
92.531502 88.074783 l
93.013168 88.199669 l
93.494827 88.286888 l
93.976501 88.11718 l
94.458168 87.953979 l
94.939827 87.797569 l
95.421501 87.648216 l
95.903168 87.506126 l
96.384827 87.371437 l
96.866501 87.243294 l
97.348167 87.122566 l
97.829826 87.009331 l
98.311501 86.903503 l
98.793167 86.80397 l
99.274834 86.711693 l
99.7565 86.626503 l
100.2382 86.548157 l
100.7198 86.476387 l
101.2015 86.410667 l
101.6832 86.351189 l
102.1648 86.297668 l
102.6465 86.249786 l
103.1282 85.898209 l
103.6098 85.137039 l
104.0915 84.412827 l
104.5732 83.719254 l
105.0548 83.047829 l
105.5365 82.40197 l
106.0182 81.791443 l
106.4998 81.221252 l
106.9815 80.693382 l
107.4632 80.209221 l
107.9448 79.76931 l
108.4265 79.373383 l
108.9082 79.02047 l
109.3898 78.709152 l
109.8715 78.437859 l
110.3532 78.205147 l
110.8348 78.008141 l
111.3165 77.847633 l
111.7982 77.721977 l
112.2798 77.632446 l
112.7615 77.578789 l
113.2432 77.559769 l
113.7248 77.575577 l
114.2065 77.622162 l
114.6882 76.915627 l
115.1698 75.780983 l
115.6515 74.727074 l
116.1332 73.74482 l
116.6148 72.825157 l
117.0965 71.972832 l
117.5782 71.197884 l
118.0598 70.504623 l
118.5415 69.896851 l
119.0232 69.37149 l
119.5048 68.928253 l
119.9865 68.560127 l
120.4682 68.259003 l
120.9498 66.640793 l
121.4315 64.78965 l
121.9132 63.066231 l
122.3948 61.47308 l
122.8765 60.01495 l
123.3582 58.688122 l
123.8398 57.47887 l
124.3215 56.33551 l
124.8032 55.242298 l
125.2848 54.250801 l
125.7665 53.373249 l
126.2482 52.59259 l
126.7298 51.780281 l
127.2115 50.491039 l
127.6932 49.254711 l
128.1748 48.007359 l
128.65649 46.69841 l
129.1382 45.45499 l
129.6198 44.292881 l
130.1015 43.205429 l
130.58321 42.176262 l
131.0648 41.211159 l
131.54649 40.334949 l
132.0282 39.56385 l
132.5098 38.907299 l
132.9915 38.365768 l
133.47321 37.939461 l
133.9548 37.620258 l
134.43649 37.394279 l
134.9182 37.145649 l
135.3998 36.28817 l
135.8815 35.548771 l
136.3632 34.929489 l
136.8448 34.409851 l
137.32651 33.957241 l
137.8082 33.594189 l
138.28979 33.343109 l
138.7715 33.186199 l
139.2532 33.044441 l
139.7348 32.935879 l
140.21651 32.90041 l
140.6982 32.939659 l
141.17979 33.080009 l
141.6615 33.34869 l
142.1432 33.752602 l
142.6248 34.283211 l
143.10651 34.892361 l
143.5882 35.38488 l
144.06979 35.319031 l
144.5515 35.029121 l
145.0332 34.856758 l
145.5148 34.867561 l
145.99651 35.05508 l
146.4782 35.37825 l
146.95979 35.708241 l
147.4415 36.093681 l
147.9232 36.607639 l
148.4048 37.264042 l
148.88651 38.06179 l
149.36819 38.995331 l
149.84979 40.05497 l
150.3315 41.22493 l
150.8132 42.489689 l
151.2948 43.815491 l
151.7765 45.09763 l
152.25819 46.225399 l
152.73981 47.328079 l
153.2215 48.453079 l
153.7032 49.647701 l
154.1848 50.92889 l
154.6665 52.298721 l
155.14819 53.746849 l
155.62981 55.258801 l
156.1115 56.803509 l
156.5932 58.369099 l
157.0748 59.977322 l
157.5565 61.63789 l
158.03819 63.347801 l
158.51981 65.102211 l
159.0015 66.892982 l
159.4832 68.710342 l
159.9648 70.544403 l
160.4465 72.384178 l
160.92821 74.219727 l
161.40981 76.027573 l
161.89149 77.677818 l
162.3732 79.309196 l
162.8548 80.917603 l
163.3365 82.496033 l
163.81821 84.036987 l
164.2998 85.531761 l
164.78149 86.975929 l
165.2632 88.0495 l
165.7448 88.118973 l
166.2265 88.190063 l
166.70821 88.263893 l
167.1898 88.338051 l
167.67149 88.413834 l
168.1532 88.492287 l
168.6348 88.570793 l
169.1165 88.651123 l
169.59821 88.734123 l
170.0798 88.816483 l
170.56149 88.901253 l
171.0432 88.987839 l
171.5248 89.074341 l
172.0065 89.163422 l
172.4882 89.2528 l
172.9698 89.343529 l
173.45151 89.436043 l
173.9332 89.528358 l
174.41479 89.623199 l
174.8965 89.7173 l
175.3782 89.813637 l
175.8598 89.909798 l
176.34151 90.007591 l
176.8232 90.105331 l
177.30479 90.204514 l
177.7865 90.303452 l
178.2682 90.403969 l
178.7498 90.503807 l
179.23151 90.605469 l
179.7132 90.706139 l
180.19479 90.808418 l
180.6765 90.910294 l
181.1582 91.013184 l
181.6398 90.97036 l
182.12151 90.375671 l
182.6032 89.683327 l
183.08479 88.985413 l
183.5665 88.310349 l
184.0145 87.7127 l
S
/Cs1 SC
1 sc
CM
303.13089 136.8927 m
303.13089 213.8744 l
514.05402 213.8744 l
514.05402 136.8927 l
h
f
0 sc
3.1481071 0 0 -3.1421101 419.61081 197.3783 cm
/F1.1[ 5 0 0 -5 0 0]sf
0 1.5 m
(?9'&@A')[ 3.335000 2.500000 2.780000 1.665000 2.780000 2.780000 0.000000 ] xS
1 j
10 M
[] 0 d
/Cs2 SC
1 0 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
82.5 129.25 m
112.5 129.25 l
S
/Cs1 SC
0 sc
3.1481071 0 0 -3.1421101 419.61081 175.38361 cm
0 1.5 m
(B8*6;6<'*<)[ 3.610000 2.780000 2.780000 2.500000 1.110000 2.500000 1.390000 2.780000 2.780000 0.000000 ] xS
2 j
1 M
[
8
3
2
3
] 0 d
/Cs2 SC
0 0 1 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
82.5 136.25 m
112.5 136.25 l
S
/Cs1 SC
0 sc
3.1481071 0 0 -3.1421101 419.61081 153.38879 cm
0 1.5 m
(C'*+D=@&E)[ 3.335000 2.780000 2.780000 2.500000 2.780000 4.165000 2.780000 1.665000 0.000000 ] xS
[
10
6
] 0 d
/Cs2 SC
0 1 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
82.5 143.25 m
112.5 143.25 l
S
0 j
10 M
[] 0 d
/Cs1 SC
0.149 sc
78.5 148.5 m
78.5 124 l
145.5 124 l
145.5 148.5 l
h
S
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
