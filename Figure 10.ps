%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (Figure 10.pdf)
%%Creator: (PDF Expert: cgpdftops CUPS filter)
%%CreationDate: (Thursday, July 11 2019 22:44:32 EDT)
%%For: (Zhaokuan Lu)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(Figure 10.pdf)def
/Creator(PDF Expert: cgpdftops CUPS filter)def
/CreationDate(Thursday, July 11 2019 22:44:32 EDT)def
/For(Zhaokuan Lu)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ColorModel RGB
<</cupsColorSpace 19/cupsBitsPerColor 8/cupsColorOrder 0/cupsCompression 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Duplex None
<</Duplex false>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType any
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<</PageSize[612.0000 792.0000]/ImagingBBox null/Orientation 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *cupsPrintQuality Normal
<</cupsInteger1 4 /HWResolution[300 300]>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
612.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YGIAAD+Helvetica
%!FontType1-1.0: YGIAAD+Helvetica 1.0000.0.0000
14 dict begin/FontName /YGIAAD+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /five put
dup 35 /one put
dup 36 /h put
dup 37 /slash put
dup 38 /p put
dup 39 /space put
dup 40 /r put
dup 41 /e put
dup 42 /f put
dup 43 /i put
dup 44 /n put
dup 45 /m put
dup 46 /t put
dup 47 /l put
dup 48 /v put
dup 49 /two put
dup 50 /three put
dup 51 /four put
dup 52 /F put
dup 53 /L put
dup 54 /O put
dup 55 /P put
dup 56 /six put
dup 57 /H put
dup 58 /g put
dup 59 /hyphen put
dup 60 /o put
dup 61 /d put
dup 62 /C put
dup 63 /A put
dup 64 /S put
dup 65 /E put
dup 66 /c put
dup 67 /a put
dup 68 /x put
dup 69 /s put
dup 70 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<












1F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B802ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B002A019BB2254A1FBA019B0025017AB349293896B8017BB348283125B8017A403648289629482725294C1F252946272729482756C80784075B07410732072B072807260721071B071408120810080E080C080A08080807B801ACB23F1F06BB01AB003F001F01ABB308060805B801AEB23F1F04BB01AD003F001F01ADB70804080208000814B8FFE0B40000010014B801ABB41000000100B801ABB606100000010006B801ADB300000100B801AD401F04000001000410000001001002000001000200000001000002010802004A00B0018DB806008516763F183F123E113946443E113946443E113946443E113946443E113946443E11394660443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/five 9 def
/six 10 def
/A 11 def
/C 12 def
/E 13 def
/F 14 def
/H 15 def
/L 16 def
/O 17 def
/P 18 def
/S 19 def
/a 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/g 25 def
/h 26 def
/i 27 def
/l 28 def
/m 29 def
/n 30 def
/o 31 def
/p 32 def
/r 33 def
/s 34 def
/t 35 def
/u 36 def
/v 37 def
/x 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4179358 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93181B17796A1204F5476A04185A500C7D1646046CB4388F5303793A562DF470C83B8683F8ED2DCB37B4DB455B059B26738571739E1E8EB009331EA5D50735911B70DB760F279BF2872346975F078FCAD5A0246E302D61C2BFA6CC5B74DFF6C22C026C4ACA1C69402B1D8A4D4DD9DA873ADB54E2C1123C587C44D81724C423F57CFA5CA314F163D552B5441B2BFAC1C1FFB5517254A12E730284D6864E7F63EDC42A68B4FAC4CDE5B559AA2AF495BC38DCE76A36E15E4E5F1EA72CB285B99E21202D35BEF6C315B5E6DD7F5F50B172DF4C9930DE59B5054A56678F466354E669CA48BD2C589218C9746E2C231C602C0C29271FC9848C174709C28C1D7092602B74238440F43F7D8B54BCF273DC65C6CF08B6091E7C60F3D8C361B0AF79B9500CFF186C51557D14E4CE96B0C94DF5F4F5F887E790BA101F93516EE14D5C427AD3E29FA6592D8637213EC6672507DFFC2A3B4D3EC0EAC40477B60A355FBA5D28AF65F9F3A0C9EE10262CCE481BCB953CC77C615596235F89B61EFF5EC615542802576DEACAF3D9086DC57FE27ACCBBF9611EBFA647A4E6313380D218292467D98DFE4489F9192AE08FF279576F0416AE62E40F08B0E363ACD4AA8CDCAC796F2C48923A2A5F6242ECDCAF929BCF54BF259AB6E33278B2FF56E24FB71F204D4B004D9B5D9368D530BEAE6E2AB76FDC7F176845A5E73931DC8D2BCC4C3CDCBBE69010C9EE83E912A0ADA2BA095FE21753EEBB59F308F436100871085D94C3A46BA11D28
F981FF4FEF45D14EBC7DF1A0C822FD14EE6D0739CD1C34656C38FA7F46C1BEF8BCD5726565A1AC52F0CD85E6A718F7A6211A786BDE2202D52DF37B6C7EA6E3592233EAFC2F6A01F1D96C581DA866EBDEFF69815369AB1E14EB94251861F2BD1132522D365BCF810A9C9576F200053D97BA59427058D63F4B5DAD105E637353CE3AD9D3B9C57093EEC450D23A770A964FD9E230465D4E2C5263AD204470B277663A3967E99D5DCC98FF4D0AF0DFFF9F76D8CFB00032817703E7B454FB468554FB7C32136352F5828AEFEFF29EAE72B5B090B196CBCB1A3282EA1F5A25DC99FD5487165024CF416324B2D08E5ECD0B577AC5C1DEC7489B01275DAE5E366DFEE6CC8C42ECC389406F8CB663F0E8B72FBA0998DBA343D459FB6340BF1ACDCC4FF45D3118BDAFE8E8E4079A2571E7E6CC9B8489C8FAA068AA51BF7E9058820C84B61779C1A7A5E641750CCEB71F30FA62187708432C71A4FF91BB8C44AF11A3C09E6F0BE065AD2A6DC2C71989DC79EB24F0D07F1AD50EE23CF4BF2D4C20E046878C3A0482F2EB0F9F784D75167643828AD3643DA550E0D46EB57D33E1E31FBF45CEB52C4EEF0FDF3AC874AECDEE36D2EA765313CCFAD038915058A907915E3926529EE938A68C5FD1481B93D93D9D60C8584C17B8FD8F7A07E157ECA83F12FF3EBA0E550364402B2C7B24FCA400DF5AFE8073BE26CA68FE8CD48DCD42A159EBCDB6942E68E9567AC9421172CFEC1DFBE116897AE916FD079B9FD4076885EFDE5E882204B1FE513CDFF0E5395D9F35DF3439718776DAAF2DB96C25832E37420824B7022C5A37C07967A46D1B33EAAB7728072A8134C01077AA180A7F249968232E2BEBBC5FC49DB6333CCEA19D8ED4A65B5FDCC477A7B86549B20F94D084534DC6F91C23C0E91182C5426C04E2D05AE4EA9021172AF681F04E327E7158E21A801BD6915983D97B93CB7965584BABB75C30CD93459EB9306DA4E4A1387546856A936ACD691835A9451FF139CD8251FAB5AF068EC9C783E14F0BE75FA798E3922668DD1D19A8529615D1BC96329BC300B267939EB21CCDE155A3AA0AE2F6375D761D6956ED0ECD3716E28733942CEF7E11AAA87D9C593D13EA0372C1D7B104AC004349563E4390F591CA58E058E388EA6041989C3116B8D34E58DE7F7B64A24A1581C2A11516CD1707E2BAF7BCE0E6FCAC5169CC7516976209B9DD2FFE90736FF8E8077189B768EB5D5EBD8C2D39D3C89D07FE675E5F11CA96981134D5D27A04803578D7EB7FE303E6A101192B9BA38401CC02465EA13ABD43462528F9319F423C342332FC6EBE71CDE9629C6370AC50349CE7F9CC713A3CE6C2F1C272F3C0B47C1A862A4ACB7BFE7FACB4C9DE73C537F4195786EE5C6FC6830E24C7D168FFF7B71533554B6024FEFE5DE07CDFA4E85E90E607A21DDF0CC00BCA379B1AB9CFD86AF44FFF

AC1CE478BA26D38B707830A80A073F83D1B5D839C2921A4CF8EBD5E53841B95E9E6DC13EB67879056764B716D73DA4B33F75722AE88994C7B7D3E9534AA433D2CD0B97AFAC636063AD9C82F535B39B620C7EB5E6967DD1BD6A5A591062D0840332773213572E6BDBF2B9D8D51DE8CFC5CB000F24712D587F553B0246302CC6693A46E8A212A2022F6DF9972A2C348EBD7825537899023586D7173896A027F58A73DC5D92E4A7F6B440D5C5AC8ACD40CB03F36B18A54DDABBF79577A4D1DB999B5E55A118030385C9746A8E0CBD0F7B342E6B656E80F20E52B18A4BF6A7CF7637E4D8685D501C431FD682CA5E9CE201000B516E8A4D3E5119546F66CAB2B90ECEFA906E8644C42AB645411CF53E3BA18D36D2F4AF8E91BBD0B87A0FFE2D05AB7BA894DC6853355D5F3F98B534D6DB2EB6B24A20F379D355A46E499F71FF59D2F1A1240584382AE874291ABA255D2288922BAB61EB28CAB15A095624AD5DDA398D837DB11AF767B1F5A3F4673424BA894AAA2500AD6E53254051EEB2F6C27C6D370914D97CF76458B0C9C11BCB40133E673AA5DF70F6C86C9BD728DADA0D3375AF78D074738E13CEA244B9810673D7D8554663BEF58220B0044F789FAD5E817F442AB3A1F8A7C134D1D52669560064D339104FE09C7B8F4BF2926C8D4562E1CF9988E32A3F61294B5F38D78B98FB515728EA7448775243A31910F4909DF0D998C3C383E4BD54A7B40A0A7C5B5077F908FBACA68EA6810D3366F96B2BE0137A6265E0FD3D8A972D426145D752BFF2B28565D534DF9BF5896DF53E721A386140201161BC1E3584AB4425D78EBC90300B053ED171E1BFD93721182555F9A0EE96D10D6DDB1701310951D774C14969F8450DD5EE908B717B738C4A919822B26BA0097FBE1024EFBB8E8760E2ECDA094F080C7798B150FAF752AB7E5109D13FDBBE817FE576BAF4EDEF16093C434E4E70004063AE6E85B52EC04AFEE159B3597706C6945393B99A791B249DF39D3AA6C77CBE717AA76103D34F6F9C6780DCB85522AAD96DC0CADFFF5E5251F17F7D65A12FC2D762B9C5C380928243127FD84E1F3250A6B2BCE8664724B6EA61BD42F162B35A28A6320842A334E7F336F18D657B49E2613F5CA7EF25C82A9A09F7ABFE7D361A9D3786E492654F5251E135D1D4B5BFEF476FBEB434D1F097E7A0B5BA8B0AF6FF5B114D651D5549B85156F2EF2B94467B7FC57005A509B98F47F9B75EA3F6DFBA65AE0026F2DA107A5D78A713F866BB1D24860681F0AE8195C02F160A2DD028AC1E98317B912419F1DD6A1429D93AC38675DBC25FADBA3E38908100482C5553DF23C021BCFBF5F4C20A0E4A7D531EBD956D4A5172882196B7AF493654DF8547510FF5ED23D5EF4C8065FD164846D8C0923A84EF5BA0BD28F5264CBF1B48155C52237D7381FBFF831DA4A05043316BAC6E03

05448DDE29105AFFE0C374DD40DAE1106231B9E50654266C9E5F6E8C1D6A093E3F76EEB6215142FE141FD76265F15FA7FE83D583E5D51F4619F1A99847F0B02CC815415EF78EB3AC0F99FAE59CBCE056AD9E96DCFAC4636CF036BCEB31FF443CDCD599AADE69BCFE7FF92A67D579172AACC88180517279BB6221FA89DA3EFB06EEA36B5470385562496FAC723A510DAF644A4F19A0DD62536CDC51DA30719C87CE5365E1A65877689FD4FEE91F9C69646DEC97A04AAFD186CCDB20185A0601CA62ACF660F6D7255D8122018E736CE80EB523397779758F97318B527CEEA20A8E39C9110F1FB61C1AC43577AA3192267C2C28A3B110F5C030AE81C9B9981A32E3684B96694B5F59DB4246A117807C5BB2BD74E222B62A96E4AD86A5DB41849B9CCD57277B788AB2F4DC79EA861C1062767084414F5E58E3ED4EC7A0770787042F43C8B3447FEE39CA985E1E1E81A0C9E3ADC0C99B0447AFB1DC7C01278C69018CC510C1F8B2A9A695D2196077FC12A8AF1C10F739FDAC2670E541BFEA500F03FCFAFABCC7CB894899F9F55FCFC3846333C9F54D719E77057C64F1325C982512D53BEA528E8BD33DD3C79FA7DF9F5C1DD7C339330999E87F6DC55C6700BD89963B13A46D9A6B553675AD89FB2EEE657A0B0EC25225C771FFF93F997DDCAEEF4A8882087C056B5A0E3523449713D809A89698E0E198DDB57AFE712376A31CA955B86698CEF695ADE31821EF97581C4A4A40030CB4DBD0B47B0124C2ED6FB4728C18B6239736ACE43876F550A6175C6658ED1ABE3BDFA4E0D36C9D5FF06B3D809A8AF8C59DCB8B2E0B9CD7F4BB07D5F4550373A219C75B4033A5BE5DD705673E74FA160842
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YGIAAD+Helvetica cguidfix
/F1.1/YGIAAD+Helvetica renmfont
%RBIBeginFontSubset: LIYULW+mwb_cmsy10
%!FontType1-1.0: LIYULW+mwb_cmsy10 1.0000.1.0000
14 dict begin/FontName /LIYULW+mwb_cmsy10 def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid1 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 23 1 index div -442 2 index div 1931 3 index div 1489 5 -1 roll div]cvx def
/sfnts [<

180F01A6FE5A0F1A000100000001000055E0880D5F0F3CF5001F080000000000C9673FAB00000000C9673FAB0017FE46078B05D100000008000200000000000000010000053CFE320000080000000000078B000100000000000000000000000000000002060001000637012D000000260074000000010000000200440005000000000002000C000600160000010C00490000000040180522051C0E17031C4D0C0D05520B4D2240034D4D240D51008DB8033C851D2B2B0000
00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/gid1 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{23 -442 1931 1489}def
/UniqueID 4034829 def
currentdict currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/LIYULW+mwb_cmsy10 cguidfix
/F2.1/LIYULW+mwb_cmsy10 renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
56.004459 603.49609 m
735.99548 603.49609 l
735.99548 9.6372681 l
56.004459 9.6372681 l
56.004459 603.49609 l
h
W
55 8.5039034 682 594.99219 rc
56.004459 603.49609 m
735.99561 603.49609 l
735.99561 9.6372576 l
56.004459 9.6372576 l
h
f
Q
q
55 8.5039034 682 594.99219 rc
56.004459 603.49609 m
735.99561 603.49609 l
735.99561 9.6372576 l
56.004459 9.6372576 l
h
f
182.71581 105.4716 m
632.89508 105.4716 l
632.89508 554.7934 l
182.71581 554.7934 l
h
f
0.5 w
2 J
1 j
0.149 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
40.25 158.5 m
183.25 158.5 l
S
40.25 15.5 m
183.25 15.5 l
S
40.25 158.5 m
40.25 157.07001 l
S
111.75 158.5 m
111.75 157.07001 l
S
183.25 158.5 m
183.25 157.07001 l
S
40.25 15.5 m
40.25 16.93 l
S
111.75 15.5 m
111.75 16.93 l
S
183.25 15.5 m
183.25 16.93 l
S
3.1481071 0 0 -3.1421101 182.71581 92.903183 cm
/F1.1[ 10 0 0 -10 0 0]sf
-3 10 m
(!)s
3.1481071 0 0 -3.1421101 407.80539 92.903183 cm
-3 10 m
(")s
3.1481071 0 0 -3.1421101 632.89508 92.903183 cm
-6 10 m
(#!)[ 5.560000 0.000000 ] xS
3.1481071 0 0 -3.1421101 407.8056 50.484692 cm
/F1.1[ 11 0 0 -11 0 0]sf
-48.5 11 m
($%&'\(\)*+,\)-\),.'/\)0\)/)[ 6.116000 3.058000 6.116000 3.058000 3.663000 6.116000 3.058000 2.442000 6.116000 6.116000 9.163000 6.116000 6.116000 3.058000 3.058000 2.442000 6.116000 5.500000 6.116000 0.000000 ] xS
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
40.25 158.5 m
40.25 15.5 l
S
183.25 158.5 m
183.25 15.5 l
S
40.25 158.5 m
41.68 158.5 l
S
40.25 122.75 m
41.68 122.75 l
S
40.25 87 m
41.68 87 l
S
40.25 51.25 m
41.68 51.25 l
S
40.25 15.5 m
41.68 15.5 l
S
183.25 158.5 m
181.82001 158.5 l
S
183.25 122.75 m
181.82001 122.75 l
S
183.25 87 m
181.82001 87 l
S
183.25 51.25 m
181.82001 51.25 l
S
183.25 15.5 m
181.82001 15.5 l
S
3.1481071 0 0 -3.1421101 170.12331 105.4716 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6 3.5 m
(!)s
3.1481071 0 0 -3.1421101 170.12331 217.80209 cm
-6 3.5 m
(#)s
3.1481071 0 0 -3.1421101 170.12331 330.13251 cm
-6 3.5 m
(1)s
3.1481071 0 0 -3.1421101 170.12331 442.46289 cm
-6 3.5 m
(2)s
3.1481071 0 0 -3.1421101 170.12331 554.7934 cm
-6 3.5 m
(3)s
0 3.1421101 3.1481071 0 141.79041 330.13269 cm
/F1.1[ 11 0 0 -11 0 0]sf
-35.5 -3 m
(4567%\)/\)-\),.)[ 6.721000 6.116000 8.558000 7.337000 3.058000 6.116000 2.442000 6.116000 9.163000 6.116000 6.116000 0.000000 ] xS
3.1481071 0 0 -3.1421101 181.9287 562.64868 cm
/F2.1[ 10 0 0 -10 0 0]sf
0 0 m
(!)s
3.1481071 0 0 -3.1421101 207.1136 562.64868 cm
/F1.1[ 10 0 0 -10 0 0]sf
0 0 m
(#!)[ 5.560000 0.000000 ] xS
3.1481071 0 0 -3.1421101 244.8909 578.35919 cm
/F1.1[ 8 0 0 -8 0 0]sf
0 0 m
(8)s
0 J
/Cs2 SC
1 0 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
54.549999 158.4957 m
68.849998 158.44881 l
83.150002 158.2094 l
97.449997 157.3873 l
111.75 155.1718 l
126.05 150.1004 l
140.35001 139.77499 l
154.64999 120.528 l
168.95 87.035751 l
183.25 31.88097 l
S
1 w
51 158.5 m
58 158.5 l
S
54.5 162 m
54.5 155 l
S
52 161 m
57 156 l
S
52 156 m
57 161 l
S
65 158.5 m
72 158.5 l
S
68.5 162 m
68.5 155 l
S
66 161 m
71 156 l
S
66 156 m
71 161 l
S
80 158.5 m
87 158.5 l
S
83.5 162 m
83.5 155 l
S
81 161 m
86 156 l
S
81 156 m
86 161 l
S
94 157.5 m
101 157.5 l
S
97.5 161 m
97.5 154 l
S
95 160 m
100 155 l
S
95 155 m
100 160 l
S
108 155.5 m
115 155.5 l
S
111.5 159 m
111.5 152 l
S
109 158 m
114 153 l
S
109 153 m
114 158 l
S
123 150.5 m
130 150.5 l
S
126.5 154 m
126.5 147 l
S
124 153 m
129 148 l
S
124 148 m
129 153 l
S
137 139.5 m
144 139.5 l
S
140.5 143 m
140.5 136 l
S
138 142 m
143 137 l
S
138 137 m
143 142 l
S
151 120.5 m
158 120.5 l
S
154.5 124 m
154.5 117 l
S
152 123 m
157 118 l
S
152 118 m
157 123 l
S
165 87.5 m
172 87.5 l
S
168.5 91 m
168.5 84 l
S
166 90 m
171 85 l
S
166 85 m
171 90 l
S
180 31.5 m
187 31.5 l
S
183.5 35 m
183.5 28 l
S
181 34 m
186 29 l
S
181 29 m
186 34 l
S
0.5 w
2 j
1 M
[
8
3
2
3
] 0 d
0 0 1 sc
54.549999 158.4888 m
68.849998 158.45081 l
83.150002 158.3559 l
97.449997 158.16479 l
111.75 157.8282 l
126.05 157.286 l
140.35001 156.46831 l
154.64999 155.2944 l
168.95 153.6738 l
183.25 151.50529 l
S
1 w
1 j
10 M
[] 0 d
57.5 158.5 m
56.621319 156.37869 l
54.5 155.5 l
52.378681 156.37869 l
51.5 158.5 l
52.378681 160.62131 l
54.5 161.5 l
56.621319 160.62131 l
h
S
71.5 158.5 m
70.621323 156.37869 l
68.5 155.5 l
66.378677 156.37869 l
65.5 158.5 l
66.378677 160.62131 l
68.5 161.5 l
70.621323 160.62131 l
h
S
86.5 158.5 m
85.621323 156.37869 l
83.5 155.5 l
81.378677 156.37869 l
80.5 158.5 l
81.378677 160.62131 l
83.5 161.5 l
85.621323 160.62131 l
h
S
100.5 158.5 m
99.621323 156.37869 l
97.5 155.5 l
95.378677 156.37869 l
94.5 158.5 l
95.378677 160.62131 l
97.5 161.5 l
99.621323 160.62131 l
h
S
114.5 157.5 m
113.6213 155.37869 l
111.5 154.5 l
109.3787 155.37869 l
108.5 157.5 l
109.3787 159.62131 l
111.5 160.5 l
113.6213 159.62131 l
h
S
129.5 157.5 m
128.62131 155.37869 l
126.5 154.5 l
124.3787 155.37869 l
123.5 157.5 l
124.3787 159.62131 l
126.5 160.5 l
128.62131 159.62131 l
h
S
143.5 156.5 m
142.62131 154.37869 l
140.5 153.5 l
138.37869 154.37869 l
137.5 156.5 l
138.37869 158.62131 l
140.5 159.5 l
142.62131 158.62131 l
h
S
157.5 155.5 m
156.62131 153.37869 l
154.5 152.5 l
152.37869 153.37869 l
151.5 155.5 l
152.37869 157.62131 l
154.5 158.5 l
156.62131 157.62131 l
h
S
171.5 153.5 m
170.62131 151.37869 l
168.5 150.5 l
166.37869 151.37869 l
165.5 153.5 l
166.37869 155.62131 l
168.5 156.5 l
170.62131 155.62131 l
h
S
186.5 151.5 m
185.62131 149.37869 l
183.5 148.5 l
181.37869 149.37869 l
180.5 151.5 l
181.37869 153.62131 l
183.5 154.5 l
185.62131 153.62131 l
h
S
0.5 w
2 j
1 M
[
10
6
] 0 d
0 1 0 sc
54.549999 158.4957 m
68.849998 158.4657 l
83.150002 158.3842 l
97.449997 158.2254 l
111.75 157.9637 l
126.05 157.57339 l
140.35001 157.0285 l
154.64999 156.3035 l
168.95 155.3726 l
183.25 154.21001 l
S
1 w
0 j
10 M
[] 0 d
54.5 162.49899 m
57.5 158.5 l
54.5 154.50101 l
51.5 158.5 l
h
S
68.5 162.49899 m
71.5 158.5 l
68.5 154.50101 l
65.5 158.5 l
h
S
83.5 162.49899 m
86.5 158.5 l
83.5 154.50101 l
80.5 158.5 l
h
S
97.5 162.49899 m
100.5 158.5 l
97.5 154.50101 l
94.5 158.5 l
h
S
111.5 161.49899 m
114.5 157.5 l
111.5 153.50101 l
108.5 157.5 l
h
S
126.5 161.49899 m
129.5 157.5 l
126.5 153.50101 l
123.5 157.5 l
h
S
140.5 161.49899 m
143.5 157.5 l
140.5 153.50101 l
137.5 157.5 l
h
S
154.5 160.49899 m
157.5 156.5 l
154.5 152.50101 l
151.5 156.5 l
h
S
168.5 159.49899 m
171.5 155.5 l
168.5 151.50101 l
165.5 155.5 l
h
S
183.5 158.49899 m
186.5 154.5 l
183.5 150.50101 l
180.5 154.5 l
h
S
0.5 w
1 j
1 0 1 sc
54.549999 158.4888 m
68.849998 158.4108 l
83.150002 158.19881 l
97.449997 157.7861 l
111.75 157.1057 l
126.05 156.0907 l
140.35001 154.67419 l
154.64999 152.7892 l
168.95 150.3687 l
183.25 147.34599 l
S
1 w
51 158.5 m
58 158.5 l
S
54.5 162 m
54.5 155 l
S
65 158.5 m
72 158.5 l
S
68.5 162 m
68.5 155 l
S
80 158.5 m
87 158.5 l
S
83.5 162 m
83.5 155 l
S
94 157.5 m
101 157.5 l
S
97.5 161 m
97.5 154 l
S
108 157.5 m
115 157.5 l
S
111.5 161 m
111.5 154 l
S
123 156.5 m
130 156.5 l
S
126.5 160 m
126.5 153 l
S
137 154.5 m
144 154.5 l
S
140.5 158 m
140.5 151 l
S
151 152.5 m
158 152.5 l
S
154.5 156 m
154.5 149 l
S
165 150.5 m
172 150.5 l
S
168.5 154 m
168.5 147 l
S
180 147.5 m
187 147.5 l
S
183.5 151 m
183.5 144 l
S
/Cs1 SC
1 sc
CM
213.40981 424.39581 m
213.40981 523.37231 l
586.46051 523.37231 l
586.46051 424.39581 l
h
f
0 sc
3.1481071 0 0 -3.1421101 329.8898 506.87619 cm
/F1.1[ 5 0 0 -5 0 0]sf
0 1.5 m
(9+:$;<\(=\)\('>?@A'=+\(\)B.'-C.\(+D)[ 3.610000 1.110000 2.780000 2.780000 1.665000 2.780000 1.665000 2.780000 2.780000 1.665000 1.390000 3.610000 3.335000 3.335000 3.335000 1.390000 2.780000 1.110000 1.665000 2.780000 2.500000 1.390000 1.390000 4.165000 2.780000 1.390000 1.665000 1.110000 0.000000 ] xS
0.5 w
/Cs2 SC
1 0 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
54 30.75 m
84 30.75 l
S
1 w
65 30.5 m
72 30.5 l
S
68.5 34 m
68.5 27 l
S
66 33 m
71 28 l
S
66 28 m
71 33 l
S
/Cs1 SC
0 sc
3.1481071 0 0 -3.1421101 329.8898 484.88141 cm
0 1.5 m
(9+:$;<\(=\)\('>?@A'.\),E<\('&\(<=FB.)[ 3.610000 1.110000 2.780000 2.780000 1.665000 2.780000 1.665000 2.780000 2.780000 1.665000 1.390000 3.610000 3.335000 3.335000 3.335000 1.390000 1.390000 2.780000 2.780000 2.500000 2.780000 1.665000 1.390000 2.780000 1.665000 2.780000 2.780000 2.780000 2.500000 0.000000 ] xS
0.5 w
2 j
1 M
[
8
3
2
3
] 0 d
/Cs2 SC
0 0 1 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
54 37.75 m
84 37.75 l
S
1 w
1 j
10 M
[] 0 d
71.5 37.5 m
70.621323 35.378681 l
68.5 34.5 l
66.378677 35.378681 l
65.5 37.5 l
66.378677 39.621319 l
68.5 40.5 l
70.621323 39.621319 l
h
S
/Cs1 SC
0 sc
3.1481071 0 0 -3.1421101 329.8898 462.88669 cm
0 1.5 m
(5+,\)C\('>?@A%>?4A'=+\(\)B.'-C.\(+D)[ 2.780000 1.110000 2.780000 2.780000 2.780000 1.665000 1.390000 3.610000 3.335000 3.335000 3.335000 1.390000 3.610000 3.335000 3.055000 3.335000 1.390000 2.780000 1.110000 1.665000 2.780000 2.500000 1.390000 1.390000 4.165000 2.780000 1.390000 1.665000 1.110000 0.000000 ] xS
0.5 w
2 j
1 M
[
10
6
] 0 d
/Cs2 SC
0 1 0 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
54 44.75 m
84 44.75 l
S
1 w
0 j
10 M
[] 0 d
68.5 48.499001 m
71.5 44.5 l
68.5 40.500999 l
65.5 44.5 l
h
S
/Cs1 SC
0 sc
3.1481071 0 0 -3.1421101 329.8898 440.89191 cm
0 1.5 m
(5+,\)C\('>?@A%>?4A'.\),E<\('&\(<=FB.)[ 2.780000 1.110000 2.780000 2.780000 2.780000 1.665000 1.390000 3.610000 3.335000 3.335000 3.335000 1.390000 3.610000 3.335000 3.055000 3.335000 1.390000 1.390000 2.780000 2.780000 2.500000 2.780000 1.665000 1.390000 2.780000 1.665000 2.780000 2.780000 2.780000 2.500000 0.000000 ] xS
0.5 w
1 j
/Cs2 SC
1 0 1 sc
3.1481071 0 0 -3.1421101 56.004459 603.49609 cm
54 51.75 m
84 51.75 l
S
1 w
65 51.5 m
72 51.5 l
S
68.5 55 m
68.5 48 l
S
0.5 w
0 j
/Cs1 SC
0.149 sc
50 57 m
50 25.5 l
168.5 25.5 l
168.5 57 l
h
S
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
